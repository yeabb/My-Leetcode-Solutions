import heapq
class Solution:
    def lastStoneWeight(self, stones: List[int]) -> int:

        #list ---> heap O(n)
        #heappop() ----> O(logn)
        #heappush()----> O(logn)
        #Since in while loop total runtime will be ----> O(nlogn)

        stones=[-x for x in stones]
        heapq.heapify(stones)

        while(len(stones)>1):
            stone1=heapq.heappop(stones)
            stone2=heapq.heappop(stones)

            if stone1<stone2:
                heapq.heappush(stones, stone1-stone2)
        if stones:
            return -1*heapq.heappop(stones)
        else:
            return 0